#--- Build from Jupyter-provided Minimal Install ---#
#--- Under Podman ---#
# podman build --arch arm64 --file ./pod/Podman.master --format docker --compress -t jreades/sparc:2025-arm .
# podman build --arch amd64 --file ./pod/Podman.master --format docker --compress -t jreades/sparc:2025-amd .
#Â podman push jreades/sparc:2025 docker://docker.io/jreades/sparc:2025
# podman run --rm -d --name sparc -p 8888:8888 \
#   -v "$(pwd):/home/jovyan/work" \
#   jreades/sparc:2025-arm start.sh jupyter lab \
#   --LabApp.password='' --ServerApp.password='' --NotebookApp.token=''
FROM quay.io/jupyter/minimal-notebook:notebook-7.4.1
LABEL maintainer="Jon Reades <j.reades@ucl.ac.uk>"

ARG TARGETPLATFORM

ENV yaml_nm 'podman.yml'
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

#--- Avoid weird build issue ---#
RUN mkdir -p /home/${NB_USER}/.cache/conda

#--- Base ---#
USER root
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
        build-essential \
        librsvg2-bin \
        fontconfig \
        texlive-fonts-recommended \
        lmodern \
        gdebi-core

#--- Install Quarto ---#
# Use the target platform to specify the Quarto version
RUN if [[ "$TARGETPLATFORM" = */arm64 ]]; then \
    curl -LO https://quarto.org/download/latest/quarto-linux-arm64.deb && \
        gdebi --non-interactive quarto-linux-arm64.deb && \
        rm quarto-linux-arm64.deb; \
  else \
    curl -LO https://quarto.org/download/latest/quarto-linux-amd64.deb && \
        gdebi --non-interactive quarto-linux-amd64.deb && \
        rm quarto-linux-amd64.deb; \
  fi

# Tidy up
RUN rm -rf /var/lib/apt/lists/*

#--- Python ---#
USER $NB_UID
ENV env_nm 'base'
ENV env_path '/opt/conda/'

ADD ../conda/$yaml_nm ./

RUN mamba env update -n base --file $yaml_nm \
    && mamba clean --all --yes --force-pkgs-dirs \ 
    && rm $yaml_nm \
    && find /opt/conda/ -follow -type f -name '*.a' -delete \
    && find /opt/conda/ -follow -type f -name '*.pyc' -delete \
    && find /opt/conda/ -follow -type f -name '*.js.map' -delete \
    && pip cache purge 

# This bloats the Docker image but not massively
# Should rebuild the font manager and allow us to access
# the fonts we've just added in Matplotlib... *should*
RUN source activate ${env_nm} \
    && mkdir -p "/home/$NB_USER/.cache/black/$(black --version | head -n 1 | cut -d ' ' -f 2)" \
    && black --code "print ( 'hello, world' )" \
    && MPLBACKEND=Agg python -c "import matplotlib.pyplot" \
    && python -c "import matplotlib.font_manager;" \
    && python -c "import logging; logging.basicConfig(level='INFO'); import black" \
    && conda deactivate

#--- Tidy and fix permissions ---#
USER root

# Disable message
RUN jupyter labextension disable "@jupyterlab/apputils-extension:announcements" \
    # Clean up
    && jupyter lab clean -y \
    && conda clean --all -f -y \
    && rm -rf $CONDA_DIR/share/jupyter/lab/staging \
    && rm -rf /home/$NB_USER/.node-gyp/* \
    && rm -rf /home/$NB_USER/.local/* \
    && rm -rf /home/$NB_USER/.cache/rosetta \
    && rm -rf /home/$NB_USER/.cache/yarn \ 
    && rm -rf /home/$NB_USER/.cache/pip 
    # Fix permissions
    #&& fix-permissions $CONDA_DIR \
    #&& fix-permissions /home/$NB_USER

#--- Install some fonts ---#
#####################
# To use web fonts: https://fonts.google.com/knowledge/using_type/using_web_fonts
# To load web fonts: https://fonts.google.com/knowledge/using_type/using_web_fonts_from_a_font_delivery_service
#####################
USER $NB_UID
ENV FONTCONF="/home/${NB_USER}/.config/fontconfig/conf.d"
ENV FONTPATH="/home/${NB_USER}/fonts"
COPY ./fonts/conf "/home/${NB_USER}/.config/fontconfig/conf.d"
COPY ./fonts/ttf "/home/${NB_USER}/fonts"
RUN tlmgr init-usertree \ 
    && fc-cache -f -v \ 
    && rm -f ~/.cache/matplotlib/fontlist*.json || true \
    && python -c "from matplotlib.font_manager import findfont; findfont('sans', rebuild_if_missing=True)"

#--- Add the data ---#
COPY ./data/src/ ./data/
COPY ./practicals/Manage_Data.ipynb ./
COPY ./practicals/Fonts.ipynb ./
COPY ./practicals/Report.qmd ./
COPY ./practicals/include-in-header.tex ./

#--- Configure startup params ---#
# Switch back to user to avoid accidental container runs as root
USER $NB_UID
